using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;

namespace SGC_Tool.MyControls
{
    class CTLXuLyAddNewApplication_Master
    {
        public DataTable LoadAllApplication()
        {
            string sqlString = string.Format(@"select ApplicationName from SGC_ApplicationItem");
            DataTable appRel = ConnectDb.ExcuteQuery(sqlString);
            return appRel;
        }

        public int AddNewApp(string AppName,string Item)
        {
            string sqlString = string.Format(@"INSERT INTO SGC_ApplicationItem
                                                (
	                                                ApplicationName,
	                                                Item
                                                )
                                                VALUES
                                                (
	                                                @ApplicationName,
	                                                @Item
                                                )");

            SqlParameter[] param_list = new SqlParameter[]
                                            {
                                                new SqlParameter("@ApplicationName",SqlDbType.NVarChar,200,ParameterDirection.Input,false,0,0,"ApplicationName",DataRowVersion.Current,AppName),
                                                new SqlParameter("@Item",SqlDbType.NVarChar,500,ParameterDirection.Input,false,0,0,"Item",DataRowVersion.Current,Item)
                                            };
            int rowEff = ConnectDb.ExcuteNonQuery(sqlString, param_list);
            return rowEff;
        }

        public int UpdateApp(string AppName,string Item)
        {
            string sqlString = string.Format(@"UPDATE SGC_ApplicationItem
                                                SET    Item = N'{0}'
                                                WHERE  ApplicationName = '{1}'",Item, AppName);
            int rowEff = ConnectDb.ExcuteNonQuery(sqlString);
            return rowEff;

        }

        public int UpdateApp(string AppName, string NewItemText,string OldTextItem)
        {
            string sqlString = string.Format(@"UPDATE SGC_ApplicationItem
                                                SET    Item = N'{0}'
                                                WHERE  ApplicationName = '{1}' and Item = N'{2}'", NewItemText, AppName,OldTextItem);
            int rowEff = ConnectDb.ExcuteNonQuery(sqlString);
            return rowEff;

        }

        public bool CheckEmptyApp(string App)
        {
            string sqlString = string.Format(@"select ApplicationName from SGC_ApplicationItem where len(ltrim(Item)) = 0 or Item is null and ApplicationName = '{0}'", App);
            object kq = ConnectDb.ExcuteScalar(sqlString);
            if (kq == null || kq is DBNull)
                return false;
            return true;
        }

        public DataTable LoadDetailForApp(string AppName)
        {
            string sqlString = string.Format("select Item from SGC_ApplicationItem where ApplicationName = N'{0}' and len(ltrim(Item)) <> 0",
                                             AppName);
            return ConnectDb.ExcuteQuery(sqlString);
        }

        public int AddNewDocumentIssue(string appName,string item,string Event,string idNhanVien,string issueContent,string Version,string reference,List<string> fileNames,List<string> names)
        {
            string ID = Guid.NewGuid().ToString();
            string sqlString_DocumentIssue = string.Format( @"INSERT INTO SGC_DocumentIssue
                                                            (
                                                                ID,
                                                                AppName,
                                                                Item,
                                                                [Event],
                                                                Creator,
                                                                DateCreated,
                                                                UpdateBy,
                                                                DateModify
                                                            )
                                                            VALUES
                                                            (
                                                                '{0}',
                                                                N'{1}',
                                                                N'{2}',
                                                                N'{3}',
                                                                N'{4}',
                                                                @Date,
                                                                N'{5}',
                                                                {6}
                                                            )",
                    ID, appName, item, Event, idNhanVien,"NULL","NULL");
            SqlParameter param = new SqlParameter("@Date", SqlDbType.DateTime, 8, ParameterDirection.Input, true, 0, 0,
                                                  "DateCreated", DataRowVersion.Current, DateTime.Now);
            string title = "";
            int num = GetMaxNumber();
            foreach(string name in names)
            {
                title += (num+1) + "-" + name + ";";
                num++;
            }
            issueContent = issueContent.Replace("'", "''");
            string sqlString_DocumentDetail = string.Format(@"INSERT INTO SGC_DocumentDetail
                                                                (
	                                                                ID,
	                                                                [Version],
	                                                                Reference,
	                                                                Title,
                                                                    IssueContent
                                                                )
                                                                VALUES
                                                                (
	                                                                '{0}',
	                                                                N'{1}',
	                                                                N'{2}',
	                                                                N'{3}',
	                                                                N'{4}'
                                                                )",
                                        ID, Version, reference, title, issueContent);

            List<string> lstSql = new List<string>();
            lstSql.Add(sqlString_DocumentIssue);
            lstSql.Add(sqlString_DocumentDetail);
            int nextID = GetMaxNumber();

            List<SqlParameter> sqlParams = new List<SqlParameter>();
            sqlParams.Add(param);
            
            foreach(string s in fileNames)
            {
                FileInfo fi = new FileInfo(s);
                byte[] b = ConvertFileToByte(fi);
                string attName = "@Att" + (nextID + 1).ToString();
                string sqlAtt = string.Format(@"INSERT INTO SGC_Attachment
                                                (
                                                    ID,
                                                    Attachment,
                                                    DocumentID
                                                )
                                                VALUES
                                                (
                                                    '{0}',
                                                     " + attName + @",
                                                    '{1}'
                                                )",(nextID + 1), ID);

                SqlParameter param_Byte = new SqlParameter(attName, SqlDbType.Binary, 232000, ParameterDirection.Input, true, 0, 0,
                                                            "Attachment", DataRowVersion.Current, b);
                sqlParams.Add(param_Byte);

                nextID++;
                lstSql.Add(sqlAtt);
            }
            
            return ConnectDb.ExcuteNonQuery_WithTransaction(lstSql, sqlParams);
        }

        public DataTable LoadDocIssue(string ApplicationName,string Item)
        {
            string sqlString = string.Format(@" select * from SGC_DocumentIssue where AppName = N'{0}' and Item =N'{1}'",
                                             ApplicationName, Item);
            return ConnectDb.ExcuteQuery(sqlString);

        }

        public DataTable LoadDocIssue_Detail(string title,string appName,string item)
        {
            string sqlString = string.Format(@" select * from SGC_DocumentDetail dd
                                                left join SGC_DocumentIssue di on dd.ID = di.ID
                                                where di.AppName = N'{0}' and di.Item =N'{1}' AND di.Event = N'{2}'",
                                                appName,item,title);
            return ConnectDb.ExcuteQuery(sqlString);

        }

        public byte[] ConvertFileToByte(FileInfo fi)
        {
            try
            {
                FileStream fs = fi.OpenRead();
                //Read all bytes into an array from the specified file.
                int nBytes = (int)fs.Length;
                byte[] ByteArray = new byte[nBytes];
                int nBytesRead = fs.Read(ByteArray, 0, nBytes);
                fs.Close();
                return ByteArray;
            }
            catch (Exception exception)
            {
                return null;
                throw;
            }

        }

        public int GetMaxNumber()
        {
            string sqlString = string.Format(@"SELECT TOP 1 CONVERT(INT, sa.ID) AS ID
                                                FROM   SGC_Attachment sa
                                                ORDER BY CONVERT(INT, sa.ID) DESC ");
            object kq = ConnectDb.ExcuteScalar(sqlString);
            if(kq == null || kq is DBNull)
            {
                return 0;
            }
            return int.Parse(Convert.ToString(kq));
        }

        //public int UpdateDocument_Detail(string ID,string detail,string version,string reference,string title_Att,List<string> fileNames)
        //{
            
        //}

        public bool DeleteAtt(string ID)
        {
            string sqlString = string.Format(@"DELETE FROM SGC_Attachment WHERE ID = '{0}'", ID);
            try
            {
                int recEff = ConnectDb.ExcuteNonQuery(sqlString);
                if (recEff > 0)
                    return true;
                return false;
            }
            catch(Exception ex)
            {
                return false;
            }

        }

        public bool AddNewAtt(string s,string DocumentID,string detail,
                            string fileName, string version, string reference, string title_Att)
        {
            string sqlString_Title = string.Format(@"select Title from SGC_DocumentDetail where ID= '{0}'", DocumentID);
            object tt = ConnectDb.ExcuteScalar(sqlString_Title);
            string title = "";
            if (tt is DBNull || tt == null)
            {
                title_Att = "";
            }
            else
                title_Att = tt.ToString();

            int nextID = GetMaxNumber();
            FileInfo fi = new FileInfo(s);
            byte[] b = ConvertFileToByte(fi);
            string attName = "@Att" + (nextID + 1).ToString();
            string sqlAtt = string.Format(@"INSERT INTO SGC_Attachment
                                                (
                                                    ID,
                                                    Attachment,
                                                    DocumentID
                                                )
                                                VALUES
                                                (
                                                    '{0}',
                                                     " +attName +@",
                                                    '{1}'
                                                )",(nextID + 1), DocumentID);

            SqlParameter param_Byte = new SqlParameter(attName, SqlDbType.Binary, 232000, ParameterDirection.Input, true,
                                                       0, 0,"Attachment", DataRowVersion.Current, b);

            
            int num = GetMaxNumber();
            title += (num + 1) + "-" + fileName + ";";
            
            detail = detail.Replace("'", "''");
            string sqlString = string.Format(@"UPDATE SGC_DocumentDetail
                                                SET IssueContent = N'{0}',
                                                    [Version] = N'{2}',
                                                    Reference = N'{3}',
	                                                Title = N'{4}'
                                                WHERE ID = '{1}'", detail, DocumentID, version, reference, title_Att + title);

            List<string> sqlStrings = new List<string>();
            sqlStrings.Add(sqlAtt);
            sqlStrings.Add(sqlString);

            List<SqlParameter> lstParam = new List<SqlParameter>();
            lstParam.Add(param_Byte);
            try
            {
                if (ConnectDb.ExcuteNonQuery_WithTransaction(sqlStrings, lstParam) > 0)
                    return true;
            }
            catch (Exception ex)
            {
                return false;
            }
            return true;
        }

        public bool DeleteApplication(string AppName)
        {
            List<string> lstSql = new List<string>();
            string sqlString = string.Format(@"select ID from SGC_DocumentIssue where AppName = N'{0}'", AppName);
            DataTable kq = ConnectDb.ExcuteQuery(sqlString);
            foreach(DataRow row in kq.Rows)
            {
                string sqlDeleteDocument = string.Format(@"delete from SGC_DocumentDetail where ID = '{0}'", row["ID"]);
                string sqlDeleteAtt = string.Format(@"delete from SGC_Attachment where DocumentID = '{0}'", row["ID"]);

                lstSql.Add(sqlDeleteDocument);
                lstSql.Add(sqlDeleteAtt);

            }
            string sqlDeleteApp = string.Format(@"delete from SGC_ApplicationItem where ApplicationName = N'{0}'",
                                                AppName);
            string sqlDeleteDocIssue = string.Format(@"delete from SGC_DocumentIssue where AppName = N'{0}'", AppName);
            lstSql.Add(sqlDeleteApp);
            lstSql.Add(sqlDeleteDocIssue);
            
            try
            {
                ConnectDb.ExcuteNonQuery_WithTransaction(lstSql);
            }
            catch(Exception ex)
            {
                return false;
            }
            return true;
        }
    }
}
